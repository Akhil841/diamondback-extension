(fun (and a b)
    (if a b false))

(fun (kmp_table p)
    (let ((m (vec-len p))
          (t (make-vec m 0))
          (i 1)
          (j 0))
        (loop
            (if (< i m)
                (if (= (vec-get p i) (vec-get p j))
                    (block
                        (vec-set! t i (+ j 1))
                        (set! i (+ i 1))
                        (set! j (+ j 1)))
                    (if (= j 0)
                        (block
                            (vec-set! t i 0)
                            (set! i (+ i 1)))
                        (set! j (vec-get t (- j 1)))))
                (break t)))))

(fun (kmp_search pat target)
    (let ((t_i 0)
          (p_i 0)
          (result_idx 0)
          (t (kmp_table pat)))
        (loop
            (if (and (< t_i (vec-len target)) (< p_i (vec-len pat)))
                (block
                    (if (= (vec-get target t_i) (vec-get pat p_i))
                        (block
                            (if (= result_idx 0)
                                (set! result_idx t_i)
                                0)
                            (set! t_i (+ t_i 1))
                            (set! p_i (+ p_i 1))
                            (if (>= p_i (vec-len pat))
                                (break result_idx)
                                0))
                        (block
                            (if (= p_i 0)
                                (set! p_i 0)
                                (set! p_i (vec-get t (- p_i 1))))
                            (set! t_i (+ t_i 1))
                            (set! result_idx 0))))
                (break (vec-len target))))))


(kmp_search
    (vec 0 0 0)
    (vec 0 1 1 0 0 0 1 1 1)
)
